--- a/CMakeLists.txt	2021-06-02 13:13:06.781748481 +0000
+++ b/CMakeLists.txt	2021-06-02 13:09:22.149274813 +0000
@@ -32,36 +32,28 @@
 include_directories(${INICPP_INCLUDE_DIR})

 # Set options to determine what/how you want to build
-option(INICPP_BUILD_SHARED "Specifies if shared library is built, if not set a static library will be built intstead." OFF)
 option(INICPP_BUILD_TESTS "Specifies if tests should be built." OFF)
 option(INICPP_BUILD_EXAMPLES "Specifies if examples should be built." OFF)

-if(INICPP_BUILD_SHARED)
-	add_library(${PROJECT_NAME} SHARED ${INICPP_SOURCES})
-	if(MSVC)
-		# set preprocessor macros for dll export
-		target_compile_definitions(${PROJECT_NAME} PUBLIC
-				INICPP_DLL)
-		target_compile_definitions(${PROJECT_NAME} PRIVATE
-				INICPP_EXPORT)
-	endif()
-else()
-	add_library(${PROJECT_NAME} STATIC ${INICPP_SOURCES})
-endif()
+add_library(${PROJECT_NAME}_shared SHARED ${INICPP_SOURCES})
+add_library(${PROJECT_NAME}_static STATIC ${INICPP_SOURCES})

 add_library(${PROJECT_NAME}_private_options INTERFACE)
-if(UNIX)
-	target_compile_options(${PROJECT_NAME}_private_options INTERFACE -Wall -Wextra -Wdeprecated -Wconversion -Wold-style-cast -Wformat)
-else()
-	target_compile_options(${PROJECT_NAME}_private_options INTERFACE /W4)
-endif()
+
+target_compile_options(${PROJECT_NAME}_private_options INTERFACE -Wall -Wextra -Wdeprecated -Wconversion -Wold-style-cast -Wformat)
+

 add_library(${PROJECT_NAME}_public_options INTERFACE)
 target_compile_features(${PROJECT_NAME}_public_options INTERFACE cxx_std_17)

-target_link_libraries(${PROJECT_NAME} PRIVATE
+target_link_libraries(${PROJECT_NAME}_shared PRIVATE
 		${PROJECT_NAME}_private_options)
-target_link_libraries(${PROJECT_NAME} PUBLIC
+target_link_libraries(${PROJECT_NAME}_shared PUBLIC
+		${PROJECT_NAME}_public_options)
+
+target_link_libraries(${PROJECT_NAME}_static PRIVATE
+		${PROJECT_NAME}_private_options)
+target_link_libraries(${PROJECT_NAME}_static PUBLIC
 		${PROJECT_NAME}_public_options)

 if(INICPP_BUILD_TESTS)
@@ -85,20 +77,13 @@
 # ========== Install targets - 'cmake --install .' ==========
 include(GNUInstallDirs)
 include(InstallRequiredSystemLibraries)
-if(UNIX)
-	install(DIRECTORY ${INICPP_INCLUDE_DIR} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
-	if(INICPP_BUILD_SHARED)
-		install(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT library)
-	else()
-		install(TARGETS ${PROJECT_NAME} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT library)
-	endif()
-elseif(WIN32)
-	install(DIRECTORY ${INICPP_INCLUDE_DIR} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
-	install(TARGETS ${PROJECT_NAME} DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT library)
-else()
-	install(DIRECTORY ${INICPP_INCLUDE_DIR} DESTINATION inicpp/include)
-	install(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION inicpp/lib COMPONENT library)
-endif()
+
+install(DIRECTORY ${INICPP_INCLUDE_DIR} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+
+install(TARGETS ${PROJECT_NAME}_shared LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} RENAME lib${PROJECT_NAME}.so)
+install(TARGETS ${PROJECT_NAME}_static ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} RENAME lib${PROJECT_NAME}.a)
+
+


 # ========== Formatting ==========

